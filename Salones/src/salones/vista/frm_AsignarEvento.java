/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package salones.vista;

import javax.swing.DefaultComboBoxModel;
import Salones.modelo.Catalogo_Evento;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.table.DefaultTableModel;
import salones.controlador.Asignacion_EventoControlador;
import salones.modelo.Feriado;
import salones.modelo.Salon;
import salones.modelo.Horario;
import salones.modelo.Asignacion_Evento;
/**
 *
 * @author efiapp
 */
public class frm_AsignarEvento extends javax.swing.JFrame {

    /**
     * Creates new form frm_AsignarEvento
     */
    public frm_AsignarEvento() {
        initComponents();
    }
    private DefaultComboBoxModel<Catalogo_Evento> modeloComboEvento;
    private DefaultComboBoxModel<Salon> modeloCombo;
    private DefaultComboBoxModel<Horario> modeloComboHorario;
    DateTimeFormatter formatter = DateTimeFormatter.ofPattern("E, dd MMM yyyy");
    DefaultTableModel tm = new DefaultTableModel(0, 1) {
        @Override
        public boolean isCellEditable(int row, int column) {
            if (0 == column) {
                return false;
            }
            return super.isCellEditable(row, column);
        }
    };

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        comboEvento = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        comboSalones = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        dt_FechaI = new com.github.lgooddatepicker.components.DatePicker();
        cmbHorario_1 = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        spn_HorasSesion = new javax.swing.JSpinner();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable(tm){
            @Override
            public void changeSelection(int rowIndex, int columnIndex,
                boolean toggle, boolean extend) {
                if (columnIndex == 0)
                super.changeSelection(rowIndex, columnIndex + 1, toggle,
                    extend);
                else
                super.changeSelection(rowIndex, columnIndex, toggle,
                    extend);
            }
        };
        ;
        jLabel9 = new javax.swing.JLabel();
        spn_Duracion = new javax.swing.JSpinner();
        btnGenerar = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        cb_dia_lunes = new javax.swing.JCheckBox();
        cb_dia_Martes = new javax.swing.JCheckBox();
        cb_dia_Miercoles = new javax.swing.JCheckBox();
        cb_dia_Jueves = new javax.swing.JCheckBox();
        cb_dia_Viernes = new javax.swing.JCheckBox();
        cb_dia_Sabado = new javax.swing.JCheckBox();
        cb_dia_Domingo = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        modeloComboEvento = new DefaultComboBoxModel(new Catalogo_Evento [] {});
        comboEvento.setModel(modeloComboEvento);
        comboEvento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboEventoActionPerformed(evt);
            }
        });

        jLabel2.setText("Seleccionar evento: ");

        jLabel1.setText("Seleccionar salón: ");

        modeloCombo = new DefaultComboBoxModel(new Salon [] {});
        comboSalones.setModel(modeloCombo);

        jLabel5.setText("Fecha de inicio:");

        modeloComboHorario = new DefaultComboBoxModel(new Horario [] {});
        cmbHorario_1.setModel(modeloComboHorario);

        jLabel7.setText("Hora de inicio:");

        jLabel10.setText("Cantidad de horas por sesión");

        spn_HorasSesion.setValue(4);

        table.setModel(tm);
        table.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        table.getColumnModel().getColumn(0).setCellRenderer(
            table.getTableHeader().getDefaultRenderer());
        jScrollPane1.setViewportView(table);

        jLabel9.setText("Duración del evento:");

        spn_Duracion.setValue(21);

        btnGenerar.setText("Generar");
        btnGenerar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerarActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Días a laborar"));

        cb_dia_lunes.setText("Lunes");

        cb_dia_Martes.setText("Martes");

        cb_dia_Miercoles.setSelected(true);
        cb_dia_Miercoles.setText("Miércoles");

        cb_dia_Jueves.setText("Jueves");

        cb_dia_Viernes.setSelected(true);
        cb_dia_Viernes.setText("Viernes");

        cb_dia_Sabado.setText("Sábado");

        cb_dia_Domingo.setText("Domingo");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cb_dia_lunes)
                .addGap(18, 18, 18)
                .addComponent(cb_dia_Martes)
                .addGap(18, 18, 18)
                .addComponent(cb_dia_Miercoles)
                .addGap(18, 18, 18)
                .addComponent(cb_dia_Jueves)
                .addGap(18, 18, 18)
                .addComponent(cb_dia_Viernes)
                .addGap(18, 18, 18)
                .addComponent(cb_dia_Sabado)
                .addGap(18, 18, 18)
                .addComponent(cb_dia_Domingo)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cb_dia_lunes)
                    .addComponent(cb_dia_Martes)
                    .addComponent(cb_dia_Miercoles)
                    .addComponent(cb_dia_Jueves)
                    .addComponent(cb_dia_Viernes)
                    .addComponent(cb_dia_Sabado)
                    .addComponent(cb_dia_Domingo))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(36, 36, 36)
                        .addComponent(comboSalones, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(27, 27, 27)
                                .addComponent(comboEvento, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 561, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel9))
                                .addGap(25, 25, 25)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(dt_FechaI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(cmbHorario_1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(spn_Duracion, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel10)
                                        .addGap(18, 18, 18)
                                        .addComponent(spn_HorasSesion, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addContainerGap(16, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGap(245, 245, 245)
                .addComponent(btnGenerar)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(68, 68, 68)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(comboEvento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(comboSalones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(dt_FechaI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(cmbHorario_1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(spn_HorasSesion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(spn_Duracion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnGenerar)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(68, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    ArrayList<LocalDate> listaDiasNoLaborales = new ArrayList<>();
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        dt_FechaI.setDateToToday();

        Asignacion_EventoControlador aec = new Asignacion_EventoControlador();
        for (Salon salon : aec.obtenerSalones()) {
            comboSalones.addItem(salon);
        }
        for (Catalogo_Evento evento : aec.obtenerEventos()) {
            comboEvento.addItem(evento);
        }
        for (Horario horario : aec.obtenerHorario()) {
            cmbHorario_1.addItem(horario);
        }
        for (Feriado feriado : aec.obtenerFeriados()) {
            DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy-MM-d");
            LocalDate date = LocalDate.parse(feriado.toString(), dtf);
            listaDiasNoLaborales.add(date);
        }
        System.out.println(listaDiasNoLaborales);
    }//GEN-LAST:event_formWindowOpened
    int duracion_Evento = 0;
    private void comboEventoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboEventoActionPerformed
        // TODO add your handling code here:
        duracion_Evento = Integer.parseInt(comboEvento.getItemAt(comboEvento.getSelectedIndex()).getDuracion());
        spn_Duracion.setValue(duracion_Evento);
    }//GEN-LAST:event_comboEventoActionPerformed
    LocalDate fecha_fin;
    int hora_fin = 0;
    private void btnGenerarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerarActionPerformed
        // TODO add your handling code here:
        crearColumnas();
        crearFilas();
        llenarCeldas();
        Asignacion_Evento ae = new Asignacion_Evento();
        Date d = new Date();
        String codigo = String.valueOf(d.getTime());
        ae.setCodigo(codigo);
        ae.setCodigo_evento(comboEvento.getItemAt(comboEvento.getSelectedIndex()).getCodigo());
        ae.setCodigo_salon(comboSalones.getItemAt(comboSalones.getSelectedIndex()).getCodigo());
        ae.setDias_se_inparte(dias_laborar);
        ae.setEstado_evento(0);
        ae.setFecha_inicio(dt_FechaI.getDate());
        ae.setFecha_fin(fecha_fin);
        ae.setHoras_sesion(Integer.parseInt(spn_HorasSesion.getValue().toString()));
        ae.setHora_inicio(cmbHorario_1.getItemAt(cmbHorario_1.getSelectedIndex()).getHora_inicio().getHours());
        ae.setHora_fin(hora_fin);
        Asignacion_EventoControlador aec = new Asignacion_EventoControlador();
        //aec.insertarAsignacionEvento(ae);
        for (String f : filas ){
            System.out.println(aec.obtenerHorario(f));
        }
    }//GEN-LAST:event_btnGenerarActionPerformed
    String dias_laborar = "";
    private void crearColumnas() {
        
        tm = new DefaultTableModel(0, 1) {
            @Override
            public boolean isCellEditable(int row, int column) {
                if (0 == column) {
                    return false;
                }
                return super.isCellEditable(row, column);
            }
        };
        table.setModel(tm);
        dias_laborar = "";
        ArrayList<String> listaDias = new ArrayList<>();
        if (cb_dia_lunes.isSelected()) {
            listaDias.add("MONDAY");
            dias_laborar += "L,";
        }
        if (cb_dia_Martes.isSelected()) {
            listaDias.add("TUESDAY");
            dias_laborar += "M,";
        }
        if (cb_dia_Miercoles.isSelected()) {
            listaDias.add("WEDNESDAY");
            dias_laborar += "MI,";
        }
        if (cb_dia_Jueves.isSelected()) {
            listaDias.add("THURSDAY");
            dias_laborar += "J,";
        }
        if (cb_dia_Viernes.isSelected()) {
            listaDias.add("FRIDAY");
            dias_laborar += "V,";
        }
        if (cb_dia_Sabado.isSelected()) {
            listaDias.add("SATURDAY");
            dias_laborar += "S,";
        }
        if (cb_dia_Domingo.isSelected()) {
            listaDias.add("SUNDAY");
            dias_laborar += "D";
        }
        if (listaDias.size() != 0) {
            dias_laborar = dias_laborar.substring(0, dias_laborar.length() - 1);
            Integer cantidadHoras = (Integer) (spn_Duracion.getValue());
            Integer cantidadSesion = (Integer) (spn_HorasSesion.getValue());
            LocalDate fechaI = dt_FechaI.getDate();
            Integer cantidadDias = cantidadHoras / cantidadSesion;
            Integer resto = cantidadHoras % cantidadSesion;
            ArrayList<String> listaFechas = new ArrayList<>();
            while (cantidadDias != 0) {
                for (String dia : listaDias) {
                    if (fechaI.getDayOfWeek().toString().equals(dia)) {
                        if (!fechaNoLaboral(listaDiasNoLaborales, fechaI)) {
                            tm.addColumn(formatter.format(fechaI));
                            cantidadDias--;
                        }

                    }
                }
                fecha_fin = fechaI;
                fechaI = fechaI.plusDays(1L);
                
                if (cantidadDias == 0) {
                    if (resto != 0) {
                        cantidadDias = 1;
                        resto = 0;
                    }
                }
            }
        }
    }

    private boolean fechaNoLaboral(ArrayList<LocalDate> listaDiasNoLaborales, LocalDate fecha) {
        boolean respuesta = false;
        for (LocalDate aux : listaDiasNoLaborales) {
            if (aux.equals(fecha)) {
                respuesta = true;
            }
        }
        return respuesta;
    }
    ArrayList<String> filas = new ArrayList<>();
    private void crearFilas() {
        Integer cantidadSesion = (Integer) (spn_HorasSesion.getValue());
        Integer hora = cmbHorario_1.getItemAt(cmbHorario_1.getSelectedIndex()).getHora_inicio().getHours();
        filas.add(hora.toString());
        for (int i = 1; i <= cantidadSesion; i++) {
            Object[] rowData = {hora.toString() + ":00"};
            filas.add(cmbHorario_1.getSelectedItem().toString());
            hora++;
            tm.addRow(rowData);
            hora_fin = hora;
        }
        System.out.println(filas);
    }

    private void llenarCeldas() {
        Integer cantidadHoras = (Integer) (spn_Duracion.getValue());
        Integer cantidadSesion = (Integer) (spn_HorasSesion.getValue());
        LocalDate fechaI = dt_FechaI.getDate();
        Integer cantidadDias = cantidadHoras / cantidadSesion;
        Integer resto = cantidadHoras % cantidadSesion;
        if (resto != 0) {
            cantidadDias = cantidadDias + 1;
        }
        int contador = cantidadHoras;
        for (int i = 1; i <= cantidadDias; i++) {
            for (int j = 0; j < cantidadSesion; j++) {
                tm.setValueAt("201", j, i);
                contador--;
                if (contador == 0) {
                    break;
                }
            }
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frm_AsignarEvento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frm_AsignarEvento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frm_AsignarEvento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frm_AsignarEvento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frm_AsignarEvento().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGenerar;
    private javax.swing.JCheckBox cb_dia_Domingo;
    private javax.swing.JCheckBox cb_dia_Jueves;
    private javax.swing.JCheckBox cb_dia_Martes;
    private javax.swing.JCheckBox cb_dia_Miercoles;
    private javax.swing.JCheckBox cb_dia_Sabado;
    private javax.swing.JCheckBox cb_dia_Viernes;
    private javax.swing.JCheckBox cb_dia_lunes;
    private javax.swing.JComboBox<Horario> cmbHorario_1;
    private javax.swing.JComboBox<Catalogo_Evento> comboEvento;
    private javax.swing.JComboBox<Salon> comboSalones;
    private com.github.lgooddatepicker.components.DatePicker dt_FechaI;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner spn_Duracion;
    private javax.swing.JSpinner spn_HorasSesion;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables
}
